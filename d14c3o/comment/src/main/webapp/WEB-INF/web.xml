<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
            http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
    version="2.5" xmlns="http://java.sun.com/xml/ns/javaee">
	<display-name>大众点评</display-name>
    <!--欢迎页面-->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

    <!--contextConfigLocation 参数定义了要装入的 Spring 配置文件。 加载root-context.xml进Spring容器-->
<!--
这里就不需要加了，已经加载了，上传文件解析器
<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring/root-context.xml</param-value>
	</context-param>
	-->

    <!--作用：在启动Web容器时，自动装配Spring applicationContext.xml的配置信息。 创建sping的Bean对象-->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

    <!--配置解决中文乱码的过滤器-->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

   <!-- 配置上传文件解析器-->
	<filter>
		<filter-name>MultipartFilter</filter-name>
		<filter-class>org.springframework.web.multipart.support.MultipartFilter</filter-class>
		<init-param>
			<param-name>multipartResolverBeanName</param-name>
			<param-value>multipartResolver</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>MultipartFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

    <!--
		org.springframework.web.filter.HiddenHttpMethodFilter作用:
		将POST请求转换为DELETE(删除)或PUT(更新)请求
	 -->
	<filter>
		<filter-name>hiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>hiddenHttpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

    <!--配置前端控制器-->
	<servlet>
		<servlet-name>spring</servlet-name> <!--取个名字-->
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--DispatcherServlet加载applicationContext.xml配置文件-->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring/applicationContext.xml</param-value>
		</init-param>
        <!-- web应用被加载的时候创建servlet -->
        <!--原来只有在用户发送request请求的时候才创建DispatcherServlet对象，配置之后启动服务器的时候，就创建DispatcherServlet对象-->
		<load-on-startup>1</load-on-startup>
	</servlet>
    <!--配置请求的路径映射-->
	<servlet-mapping>
		<servlet-name>spring</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<jsp-config>
		<jsp-property-group>
			<url-pattern>*.jsp</url-pattern>
			<include-prelude>/WEB-INF/jsp/system/common.jsp</include-prelude>
		</jsp-property-group>
	</jsp-config>
</web-app>